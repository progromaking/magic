
Процедура ОбъединтьЯчейкиВТабличномДокументе(ТабличныйДокумент, МаркерОбъединения) Экспорт
	
	ОбъединяемыеЯчейки = НайтиОбластиТабличногоДокументаПоВхождениюПодстроки(ТабличныйДокумент, МаркерОбъединения);
	
	Заголовки = ОбъединяемыеЯчейки.Скопировать();
	Заголовки.Свернуть("Текст");
	Для каждого Строка из Заголовки Цикл
		
		Отбор = Новый Структура("Текст", Строка.Текст);
		ОбъединяемаяГруппа = ОбъединяемыеЯчейки.Скопировать(Отбор);
		ОбъединяемаяГруппа.Сортировать("Верх,Лево");
		
		ЛевоВерх = ОбъединяемаяГруппа[0];
		ПравоНиз = ОбъединяемаяГруппа[ОбъединяемаяГруппа.Количество()-1];
		
		Область = ТабличныйДокумент.Область(ЛевоВерх.Верх, ЛевоВерх.Лево, ПравоНиз.Верх, ПравоНиз.Лево);
		Область.Объединить();
		
	КонецЦикла;

	
КонецПроцедуры

Процедура ЗаменитьТекстВТабличномДокументе(ТабличныйДокумент, ПодстрокаПоиска, ПодстрокаЗамены) Экспорт
	
	НайденныеОбласти = НайтиОбластиТабличногоДокументаПоВхождениюПодстроки(ТабличныйДокумент, ПодстрокаПоиска);
	Для каждого Строка из НайденныеОбласти Цикл
		Строка.Область.Текст = СтрЗаменить(Строка.Область.Текст, ПодстрокаПоиска, ПодстрокаЗамены);
	КонецЦикла;
	
КонецПроцедуры

Процедура СкрытьСтрокиВТабличномДокументе(ТабличныйДокумент, МаркерУдаления) Экспорт
	
	Если Ложь Тогда
		ТабличныйДокумент = Новый ТабличныйДокумент;
	КонецЕсли;
	
	НайденныеОбласти = НайтиОбластиТабличногоДокументаПоВхождениюПодстроки(ТабличныйДокумент, МаркерУдаления);
	НайденныеОбласти.Свернуть("Верх");
	
	Для сч = -НайденныеОбласти.Количество() по -1 Цикл
		Строка = НайденныеОбласти[(-сч)-1];
		Область = ТабличныйДокумент.Область(Строка.Верх, , Строка.Верх, );
		Область.Видимость = Ложь;
	КонецЦикла;
	
КонецПроцедуры

Функция НайтиОбластиТабличногоДокументаПоВхождениюПодстроки(ТабличныйДокумент, ПодстрокаПоиска) Экспорт
	
	НайденныеОбласти = Новый ТаблицаЗначений;
	НайденныеОбласти.Колонки.Добавить("Область");
	НайденныеОбласти.Колонки.Добавить("Текст");
	НайденныеОбласти.Колонки.Добавить("Верх");
	НайденныеОбласти.Колонки.Добавить("Лево");
	
	НайденнаяОбласть = ТабличныйДокумент.НайтиТекст(ПодстрокаПоиска);
	
	Пока НЕ НайденнаяОбласть = Неопределено Цикл
		
		НоваяСтрока = НайденныеОбласти.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, НайденнаяОбласть);
		НоваяСтрока.Область = НайденнаяОбласть;
		
		НайденнаяОбласть = ТабличныйДокумент.НайтиТекст(ПодстрокаПоиска, НайденнаяОбласть);
		
	КонецЦикла;
	
	Возврат НайденныеОбласти;
	
КонецФункции

Процедура ОбъединитьМассивТабличныхДокументовВФайлПДФ(МассивТабличныхДокументов, ИмяФайла) Экспорт
	
	Пакет = Новый ПакетОтображаемыхДокументов;
	
	Для каждого ТабличныйДокумент из МассивТабличныхДокументов Цикл
		ЭлементПакета = Пакет.Состав.Добавить();
		
		ДокументРезультат = Новый ТабличныйДокумент;
		ДокументРезультат.Вывести(ТабличныйДокумент); // если не делать такой финт, то в некоторых случаях программа падает с системной ошибкой
		ЗаполнитьЗначенияСвойств(ДокументРезультат, ТабличныйДокумент);
		
		ЭлементПакета.Данные = ПоместитьВоВременноеХранилище(ДокументРезультат);
	КонецЦикла;
	
	Пакет.ЗаписатьФайлДляПечати(ИмяФайла);
	
КонецПроцедуры

Функция РазместитьТабличныйДокументВТабличномДокументе(ТабличныйДокументПриемник, ТабличныйДокументИсточник, НачальнаяЯчейкаПриемника = Неопределено) Экспорт
	
	Если НачальнаяЯчейкаПриемника = Неопределено Тогда
		ТабличныйДокументПриемник.Вывести(ТабличныйДокументИсточник);
		Возврат ТабличныйДокументПриемник;
	КонецЕсли;
	
	// Определяем максимальшую суммарную ширину колонок до границы вывода
	МаксимальнаяСуммаШиринКолонок = 0;
	Для счСтр = НачальнаяЯчейкаПриемника.Верх по НачальнаяЯчейкаПриемника.Верх + ТабличныйДокументИсточник.ВысотаТаблицы - 1 Цикл
		СуммаШиринВТекущейСтроке = 0;
		Для счКол = 1 по НачальнаяЯчейкаПриемника.Лево - 1 Цикл
			СуммаШиринВТекущейСтроке = СуммаШиринВТекущейСтроке + ТабличныйДокументПриемник.Область(счСтр, счКол).ШиринаКолонки;
		КонецЦикла;
		МаксимальнаяСуммаШиринКолонок = Макс(МаксимальнаяСуммаШиринКолонок, СуммаШиринВТекущейСтроке);
	КонецЦикла;
	
	// выравнивамем границу вывода
	Для счСтр = НачальнаяЯчейкаПриемника.Верх по НачальнаяЯчейкаПриемника.Верх + ТабличныйДокументИсточник.ВысотаТаблицы - 1 Цикл
		СуммаШиринВТекущейСтроке = 0;
		Для счКол = 1 по НачальнаяЯчейкаПриемника.Лево - 1 Цикл
			СуммаШиринВТекущейСтроке = СуммаШиринВТекущейСтроке + ТабличныйДокументПриемник.Область(счСтр, счКол).ШиринаКолонки;
		КонецЦикла;
		ТабличныйДокументПриемник.Область(счСтр,,счСтр,).СоздатьФорматСтрок();
		Область = ТабличныйДокументПриемник.Область(счСтр, НачальнаяЯчейкаПриемника.Лево-1);
		Область.ШиринаКолонки = Область.ШиринаКолонки + (МаксимальнаяСуммаШиринКолонок - СуммаШиринВТекущейСтроке)
	КонецЦикла;
	
	// копируем содержимое ячеек
	Для счСтр = 1 по ТабличныйДокументИсточник.ВысотаТаблицы Цикл
		
		Для счКол = 1 по ТабличныйДокументИсточник.ШиринаТаблицы Цикл
			ЯчейкаИсточник = ТабличныйДокументИсточник.Область(СчСтр, счКол);
			ЯчейкаПриемник = ТабличныйДокументПриемник.Область(СчСтр+НачальнаяЯчейкаПриемника.Верх-1, счКол+НачальнаяЯчейкаПриемника.Лево-1);
			
			
			ЗаполнитьЗначенияСвойств(ЯчейкаПриемник, ЯчейкаИсточник,,);
			ЯчейкаПриемник.Текст = ЯчейкаИсточник.Текст;
			ЯчейкаПриемник.РежимИзмененияРазмераКолонки = РежимИзмененияРазмера.БыстроеИзменение;
			ЯчейкаПриемник.ШиринаКолонки = ЯчейкаИсточник.ШиринаКолонки;
		КонецЦикла;
	КонецЦикла;
	
	
	// копируем рисунки
	Сериализатор = Новый СериализаторXDTO(ФабрикаXDTO);
	ДокументИсточник_XDTO = Сериализатор.ЗаписатьXDTO(ТабличныйДокументИсточник);
	
	ТабличныйДокументПриемник.Вывести(ТабличныйДокументИсточник);
	ИндексПервогоРисунка = ТабличныйДокументПриемник.Рисунки.Количество() - ТабличныйДокументИсточник.Рисунки.Количество();
	Для ИндексВИсточнике = 0 по ТабличныйДокументИсточник.Рисунки.Количество() - 1 Цикл
		Рисунок = ТабличныйДокументПриемник.Рисунки[ИндексВИсточнике + ИндексПервогоРисунка];
		
		ПараметрыРисунка = ДокументИсточник_XDTO.drawing[ИндексВИсточнике];
		Область = ТабличныйДокументПриемник.Область(
						ПараметрыРисунка.beginrow + НачальнаяЯчейкаПриемника.Верх, 
						ПараметрыРисунка.begincolumn + НачальнаяЯчейкаПриемника.Лево,
						ПараметрыРисунка.endrow + НачальнаяЯчейкаПриемника.Верх-1, 
						ПараметрыРисунка.endcolumn + НачальнаяЯчейкаПриемника.Лево-1);
		Рисунок.Расположить(Область);
		
		РисунокВИсточнике = ТабличныйДокументИсточник.Рисунки[ИндексВИсточнике];
		ЗаполнитьЗначенияСвойств(Рисунок, РисунокВИсточнике, "Ширина,Высота");
	КонецЦикла;
	
	УдаляемаяОбласть = ТабличныйДокументПриемник.Область(ТабличныйДокументПриемник.ВысотаТаблицы-ТабличныйДокументИсточник.ВысотаТаблицы+1,,ТабличныйДокументПриемник.ВысотаТаблицы,);
	ТабличныйДокументПриемник.УдалитьОбласть(УдаляемаяОбласть,ТипСмещенияТабличногоДокумента.ПоВертикали);
	
	// объединяем области
	Для каждого ПараметрыОбъединениия из ДокументИсточник_XDTO.merge Цикл
		Высота = ?(ЗначениеЗаполнено(ПараметрыОбъединениия.h),ПараметрыОбъединениия.h,0);
		Ширина = ?(ЗначениеЗаполнено(ПараметрыОбъединениия.w),ПараметрыОбъединениия.w,0);
		Область = ТабличныйДокументПриемник.Область(
						ПараметрыОбъединениия.r + НачальнаяЯчейкаПриемника.Верх, 
						ПараметрыОбъединениия.c + НачальнаяЯчейкаПриемника.Лево,
						ПараметрыОбъединениия.r + НачальнаяЯчейкаПриемника.Верх + Высота,
						ПараметрыОбъединениия.c + НачальнаяЯчейкаПриемника.Лево + Ширина);
		ТабличныйДокументПриемник.Область(Область.Верх,,Область.Низ,).СоздатьФорматСтрок();
		Область.Объединить();
	КонецЦикла;
	
	
	
	Возврат ТабличныйДокументПриемник;
	
КонецФункции


Функция ПолучитьВысотуОбласти(ИзмеряемыйТабДок) Экспорт 
    МассивТабДоков = Новый Массив;
    МассивТабДоков.Добавить(ИзмеряемыйТабДок);
    
    ТабДок = Новый ТабличныйДокумент;
    ТекВысота = 512;
    ДобавВысота = 0;
    
    Пока Истина Цикл
        СтрТабДока = ТабДок.ПолучитьОбласть(,,1);
        СтрТабДока.ТекущаяОбласть.ВысотаСтроки = ТекВысота;
        МассивТабДоков.Добавить(СтрТабДока);
        
        Если ТабДок.ПроверитьВывод(МассивТабДоков) Тогда
            ДобавВысота = ДобавВысота + ТекВысота;
        Иначе    
            Если ТекВысота > 1 Тогда
                МассивТабДоков.Удалить(МассивТабДоков.ВГраница());
                ТекВысота = ТекВысота / 2;
            Иначе
                Прервать;
            КонецЕсли;
        КонецЕсли;
    КонецЦикла;
    
    ОбщВысота = 785;//вычислена ранее этой же функцией: ВысотаОбластиТабДока(Новый ТабличныйДокумент)
    Возврат ОбщВысота - ДобавВысота;
КонецФункции

Функция ПолучитьВысотуОбластиВМиллиметрах(Область) Экспорт
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.Вывести(Область);
    Надпись = ТабличныйДокумент.Рисунки.Добавить(ТипРисункаТабличногоДокумента.Текст);    
    Надпись.Расположить(ТабличныйДокумент.Область(1,1,ТабличныйДокумент.ВысотаТаблицы,1));    
    Возврат Надпись.Высота;    

КонецФункции
// Статьи по вычислению высоты строки табличного документа
// http://avb1c.narod.ru/rowheight.html
// http://infostart.ru/public/123769/


Процедура ЗадатьФорматСтрокВТабличномДокументе(пТабличныйДокумент)
	// задает индивидуальный формат строк для табличного документа, сохраняя ширину колонок при выводе его в другой табличный документ
	
	пТабличныйДокумент.Область(1,,пТабличныйДокумент.ВысотаТаблицы).СоздатьФорматСтрок();
	
КонецПроцедуры
// взято с форума: http://www.sql.ru/forum/925898/vyvod-raznyh-otchetov-v-odin-tablichnyy-dokument-reshenie