

Функция ПрочитатьDOMИзФайла(ПутьКФайлу) Экспорт
	
	ЧтениеXML=Новый ЧтениеXML(); 
	ПараметрыЧтения = Новый ПараметрыЧтенияXML(,,,ТипПроверкиXML.НетПроверки);
	ЧтениеXML.ОткрытьФайл(ПутьКФайлу, ПараметрыЧтения);
	ПостроительDOM = Новый ПостроительDOM;
	Возврат ПостроительDOM.Прочитать(ЧтениеXML);
	
КонецФункции

Процедура ЗаписатьDOMОбъектВФайл(DOMОбъект, ПутьКФайлу)
	
	ЗаписьXML = Новый ЗаписьXML();
	ЗаписьXML.ОткрытьФайл(ПутьКФайлу);
	ЗаписьDOM = Новый ЗаписьDOM();
	ЗаписьDOM.Записать(DOMОбъект, ЗаписьXML);
	ЗаписьXML.Закрыть();	
	
КонецПроцедуры

Процедура ОчиститьДочерниеУзлыDOMОбъекта(DOMОбъект, ИмяРодительскогоУзла)
	
	НайденныйУзел = DOMОбъект.ПолучитьЭлементыПоИмени(ИмяРодительскогоУзла)[0];
	Пока НайденныйУзел.ЕстьДочерниеУзлы() Цикл
		НайденныйУзел.УдалитьДочерний(НайденныйУзел.ПервыйДочерний);
	КонецЦикла;
	
КонецПроцедуры

Процедура УдалитьУзлыПоИмениИзDOMОбъекта(DOMОбъект, ИмяУзла)
	НайденныеУзлы = DOMОбъект.ПолучитьЭлементыПоИмени(ИмяУзла);
	Для Каждого Узел Из НайденныеУзлы Цикл
		Узел.РодительскийУзел.УдалитьДочерний(Узел);
	КонецЦикла;
КонецПроцедуры

Процедура УдалитьВсеАтрибутыИзУзлаDOMОбъекта(DOMОбъект, ИмяУзла)
	НайденныеУзлы = DOMОбъект.ПолучитьЭлементыПоИмени(ИмяУзла);
	Для Каждого Узел Из НайденныеУзлы Цикл
		МассивАтрибутов = Новый Массив;
		Для Каждого Атрибут Из Узел.Атрибуты Цикл
			МассивАтрибутов.Добавить(Атрибут.Имя);
		КонецЦикла;
		
		Для Каждого ИмяАтрибута Из МассивАтрибутов Цикл
			Узел.УдалитьАтрибут(ИмяАтрибута);
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры


Функция ПолучитьТекстСтраницы(Адрес)
	
	Результат = ПолучитьРезультатИнтернетЗапроса(Адрес);
	Возврат Результат.ПолучитьТелоКакСтроку();
	
КонецФункции

Функция ПолучитьРезультатИнтернетЗапроса(АдресРесурсаВИнтернете, PostПараметрыСтрокаИлиСтруктура = Неопределено, 
										Заголовки = Неопределено, Кодировка = "UTF-8", Логин = Неопределено, Пароль = Неопределено,
										Порт = Неопределено, Защищенное = Ложь) Экспорт
										
	Если ТипЗнч(PostПараметрыСтрокаИлиСтруктура) = Тип("Строка") Тогда
		ПараметрыЗапроса = PostПараметрыСтрокаИлиСтруктура;
	ИначеЕсли ТипЗнч(PostПараметрыСтрокаИлиСтруктура) = Тип("Структура") ИЛИ ТипЗнч(PostПараметрыСтрокаИлиСтруктура) = Тип("Соответствие") Тогда
		ПараметрыЗапроса = "";
		Для каждого КлючИЗначение из PostПараметрыСтрокаИлиСтруктура Цикл
			
			ПараметрыЗапроса = ПараметрыЗапроса + КлючИЗначение.Ключ + "=" + КлючИЗначение.Значение + "&";
		КонецЦикла;
		Если НЕ ПустаяСтрока(ПараметрыЗапроса) Тогда
			ПараметрыЗапроса = Лев(ПараметрыЗапроса, СтрДлина(ПараметрыЗапроса)-1);
		КонецЕсли;
	КонецЕсли;
	
	Если Заголовки = Неопределено Тогда
		ЗаголовкиЗапроса = Новый Соответствие;
	Иначе
		ЗаголовкиЗапроса = Заголовки;
	КонецЕсли;
	
	Если Найти(НРег(АдресРесурсаВИнтернете),"https://") = 1 Тогда
		ЗащищенноеСоединение = Новый ЗащищенноеСоединениеOpenSSL;
	Иначе
		ЗащищенноеСоединение = Неопределено;
	КонецЕсли;
	
	АдресБезHTTP = СтрЗаменить(АдресРесурсаВИнтернете, "//", Символы.ПС);
	АдресБезHTTP = СтрПолучитьСтроку(АдресБезHTTP, СтрЧислоСтрок(АдресБезHTTP));
	
	АдресСервера = СтрПолучитьСтроку(СтрЗаменить(АдресБезHTTP, "/", Символы.ПС), 1);
	
	АдресРесурсаВнутриДомена = Сред(АдресБезHTTP, Найти(АдресБезHTTP, "/"));
	
	Соединение = Новый HTTPСоединение(АдресСервера, ,Логин,Пароль,, , ЗащищенноеСоединение);
	Запрос = Новый HTTPЗапрос(АдресРесурсаВнутриДомена, ЗаголовкиЗапроса);
	
	Если НЕ ПустаяСтрока(ПараметрыЗапроса) Тогда
		// POST запрос
		Запрос.Заголовки.Вставить("Content-type", "application/x-www-form-urlencoded;charset=utf-8");
		//Запрос.УстановитьТелоИзСтроки(ПараметрыЗапроса, Кодировка, ИспользованиеByteOrderMark.НеИспользовать);
		Запрос.УстановитьТелоИзСтроки(ПараметрыЗапроса, Кодировка);
		Ответ = Соединение.ОтправитьДляОбработки(Запрос);
	Иначе
		// GET запрос
		Ответ = Соединение.Получить(Запрос);
	КонецЕсли;
	
	Возврат Ответ;
	
КонецФункции


