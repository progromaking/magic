
Процедура СохранитьСвойствоОбъекта(Контрагент,ИмяСвойства,ЗначениеСвойства) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СвойстваОбъектов.Ссылка
	               |ИЗ
	               |	ПланВидовХарактеристик.СвойстваОбъектов КАК СвойстваОбъектов
	               |ГДЕ
	               |	СвойстваОбъектов.Наименование = &ИмяСвойства
	               |	И СвойстваОбъектов.НазначениеСвойства = &НазначениеСвойства";
	Запрос.УстановитьПараметр("ИмяСвойства",ИмяСвойства);
	Запрос.УстановитьПараметр("НазначениеСвойства",ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Контрагенты);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		
		СвойствоОбъект = ПланыВидовХарактеристик.СвойстваОбъектов.СоздатьЭлемент();
		СвойствоОбъект.НазначениеСвойства = ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Контрагенты;
		СвойствоОбъект.Наименование = ИмяСвойства;
		СвойствоОбъект.ТипЗначения  = Тип("Строка");
		СвойствоОбъект.Записать();		
		Свойство = СвойствоОбъект.Ссылка;
		
	Иначе
		
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		Свойство = Выборка.Ссылка;
		
	КонецЕсли;
	
	НаборЗаписей = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Объект.Установить(Контрагент);
	НаборЗаписей.Отбор.Свойство.Установить(Свойство);
	НС = НаборЗаписей.Добавить();
	НС.Объект = Контрагент;
	НС.Свойство = Свойство;
	НС.Значение = ЗначениеСвойства;
	
	НаборЗаписей.Записать();
	
	
КонецПроцедуры


Функция ПолучитьЗначениеДополнительногоСвойстваПоЗаголовку(Объект, ЗаголовокСвойства) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Значения.Значение
	|ИЗ
	|	РегистрСведений.ДополнительныеСведения КАК Значения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК Свойства
	|		ПО (Свойства.Ссылка = Значения.Свойство)
	|			И (Свойства.Заголовок = &ЗаголовокСвойства)
	|ГДЕ
	|	Значения.Объект = &Объект";
	
	Запрос.УстановитьПараметр("Объект", Объект);
	Запрос.УстановитьПараметр("ЗаголовокСвойства", ЗаголовокСвойства);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Значение;
	КонецЕсли;
	
КонецФункции

#Область _ // Регистрация внешней обработки

Функция СведенияОВнешнейОбработке() Экспорт
	
	ПараметрыРегистрации = ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке("2.2.2.1");
	
	ПараметрыРегистрации.Вид = ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиДополнительнаяОбработка();
	ПараметрыРегистрации.Версия = "1.0";
	ПараметрыРегистрации.Информация = "от 15.06.20";
	//ПараметрыРегистрации.БезопасныйРежим = Ложь; // отключаем безопасный режим только при необходимости
	
	НоваяКоманда = ПараметрыРегистрации.Команды.Добавить();
	НоваяКоманда.Представление = "Имя команды открытия формы настройки";
	НоваяКоманда.Идентификатор = "ШаблонСРегламентнымЗаданием";
	НоваяКоманда.Использование = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыОткрытиеФормы();
	
	НоваяКоманда = ПараметрыРегистрации.Команды.Добавить();
	НоваяКоманда.Представление = "Имя команды открытия формы настройки (регламентное задание)";
	НоваяКоманда.Идентификатор = "ШаблонСРегламентнымЗаданиемаРегламентноеЗадание";
	НоваяКоманда.Использование = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыВызовСерверногоМетода();
	
	НоваяКоманда = ПараметрыРегистрации.Команды.Добавить();
	НоваяКоманда.Представление = "Название команды настройки";
	НоваяКоманда.Идентификатор = "НазваниеКомандыНастройки";
	НоваяКоманда.Использование = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыВызовКлиентскогоМетода();
	
	Возврат ПараметрыРегистрации;
	
КонецФункции

Процедура ВыполнитьКоманду(ИдентификаторКоманды, ПараметрыВыполнения) Экспорт
	
	Если ИдентификаторКоманды = "ШаблонСРегламентнымЗаданиемаРегламентноеЗадание" Тогда
		ПеречитатьХранилищеНастроек();
		ОсновнойМетодНазватьОсмысленно();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область _ // Сохранение/восстановление настроек БСП

Процедура СохранитьНастройки() Экспорт
	УстановитьПривилегированныйРежим(Истина);
	ИмяПользователя = "*";
	КлючОбъекта = ЭтотОбъект.Метаданные().Имя;
	КлючНастроек = "";
	Настройки = Новый Структура;
	Настройки.Вставить("ИмяТабличнойЧасти", ЗагружаемыеОбработки.Выгрузить());
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(КлючОбъекта, КлючНастроек, Настройки,,ИмяПользователя);
	
КонецПроцедуры

Процедура ВосстановитьНастройки() Экспорт
	УстановитьПривилегированныйРежим(Истина);
	ИмяПользователя = "*";
	КлючОбъекта = ЭтотОбъект.Метаданные().Имя;
	КлючНастроек = "";
    Настройки = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(КлючОбъекта, КлючНастроек, ,, ИмяПользователя);
	
	Если ТипЗнч(Настройки) = Тип("Структура") И Настройки.Свойство("ИмяТабличнойЧасти") Тогда
		ЗагружаемыеОбработки.Загрузить(Настройки.ЗагружаемыеОбработки);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

