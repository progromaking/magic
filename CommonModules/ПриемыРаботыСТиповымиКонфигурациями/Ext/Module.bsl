
Процедура СохранитьСвойствоОбъекта(Контрагент,ИмяСвойства,ЗначениеСвойства) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СвойстваОбъектов.Ссылка
	               |ИЗ
	               |	ПланВидовХарактеристик.СвойстваОбъектов КАК СвойстваОбъектов
	               |ГДЕ
	               |	СвойстваОбъектов.Наименование = &ИмяСвойства
	               |	И СвойстваОбъектов.НазначениеСвойства = &НазначениеСвойства";
	Запрос.УстановитьПараметр("ИмяСвойства",ИмяСвойства);
	Запрос.УстановитьПараметр("НазначениеСвойства",ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Контрагенты);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		
		СвойствоОбъект = ПланыВидовХарактеристик.СвойстваОбъектов.СоздатьЭлемент();
		СвойствоОбъект.НазначениеСвойства = ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Контрагенты;
		СвойствоОбъект.Наименование = ИмяСвойства;
		СвойствоОбъект.ТипЗначения  = Тип("Строка");
		СвойствоОбъект.Записать();		
		Свойство = СвойствоОбъект.Ссылка;
		
	Иначе
		
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		Свойство = Выборка.Ссылка;
		
	КонецЕсли;
	
	НаборЗаписей = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Объект.Установить(Контрагент);
	НаборЗаписей.Отбор.Свойство.Установить(Свойство);
	НС = НаборЗаписей.Добавить();
	НС.Объект = Контрагент;
	НС.Свойство = Свойство;
	НС.Значение = ЗначениеСвойства;
	
	НаборЗаписей.Записать();
	
	
КонецПроцедуры


Функция ПолучитьЗначениеДополнительногоСвойстваПоЗаголовку(Объект, ЗаголовокСвойства) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Значения.Значение
	|ИЗ
	|	РегистрСведений.ДополнительныеСведения КАК Значения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК Свойства
	|		ПО (Свойства.Ссылка = Значения.Свойство)
	|			И (Свойства.Заголовок = &ЗаголовокСвойства)
	|ГДЕ
	|	Значения.Объект = &Объект";
	
	Запрос.УстановитьПараметр("Объект", Объект);
	Запрос.УстановитьПараметр("ЗаголовокСвойства", ЗаголовокСвойства);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Значение;
	КонецЕсли;
	
КонецФункции

#Область _ // Регистрация внешней обработки

Функция СведенияОВнешнейОбработке() Экспорт
    ПараметрыРегистрации = Новый Структура;
    ПараметрыРегистрации.Вставить("Вид", "ДополнительнаяОбработка");
    ПараметрыРегистрации.Вставить("Наименование", "Идентификация номенклатуры по коду ЕГАИС");
    ПараметрыРегистрации.Вставить("Версия", "1.0");
    ПараметрыРегистрации.Вставить("БезопасныйРежим", Истина);
    ПараметрыРегистрации.Вставить("Информация", "Идентификация номенклатуры по коду ЕГАИС");
    ТаблицаКоманд = ПолучитьТаблицуКоманд();
    
    ДобавитьКоманду(ТаблицаКоманд,
    "Идентификация номенклатуры по коду ЕГАИС",
    "ИдентификацияНоменклатурыПоКодуЕГАИС",
    "ОткрытиеФормы",
    //<Показывать оповещение>,
    //<Модификатор>
    );
    
    ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
    Возврат ПараметрыРегистрации;
КонецФункции

Функция ПолучитьТаблицуКоманд()
    Команды = Новый ТаблицаЗначений;
    Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));
    Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));
    Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));
    Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));
    Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
    Возврат Команды;
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
    НоваяКоманда = ТаблицаКоманд.Добавить();
    НоваяКоманда.Представление = Представление;
    НоваяКоманда.Идентификатор = Идентификатор;
    НоваяКоманда.Использование = Использование;
    НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
    НоваяКоманда.Модификатор = Модификатор;
КонецПроцедуры

#КонецОбласти