
Функция ИзвлечьПодстрокиПоНачалуИОкончанию(ИсходнаяСтрока, НачинаетсяС, ОканчиваетсяНа) Экспорт
	
	СимволПереносаСтроки = Строка(Новый УникальныйИдентификатор);
	КопияИсходнойСтроки = СтрЗаменить(ИсходнаяСтрока, Символы.ПС, СимволПереносаСтроки); // получили текст в одну строку
	
	СимволНачалаПодстроки = СтрЗаменить(НачинаетсяС, Символы.ПС, СимволПереносаСтроки);
	СимволКонцаПодстроки = СтрЗаменить(ОканчиваетсяНа, Символы.ПС, СимволПереносаСтроки);
	КопияИсходнойСтроки = СтрЗаменить(КопияИсходнойСтроки, СимволНачалаПодстроки, Символы.ПС + СимволНачалаПодстроки);
	
	МассивПодстрок = Новый Массив;
	Для сч = 2 По СтрЧислоСтрок(КопияИсходнойСтроки) Цикл
		Подстрока = СтрПолучитьСтроку(КопияИсходнойСтроки, сч);
		Подстрока = СтрЗаменить(Подстрока, СимволКонцаПодстроки, СимволКонцаПодстроки + Символы.ПС);
		Подстрока = СтрПолучитьСтроку(Подстрока, 1);
		Подстрока = СтрЗаменить(Подстрока, СимволПереносаСтроки, Символы.ПС);
		МассивПодстрок.Добавить(Подстрока);
	КонецЦикла;
	
	Возврат МассивПодстрок;
КонецФункции

Функция ВставитьСтрокуПередПодстрокой(ИсходнаяСтрока, ВставляемаяПодстрока, ПодстрокаМаркер) Экспорт
	Возврат СтрЗаменить(ИсходнаяСтрока, ПодстрокаМаркер, ВставляемаяПодстрока + ПодстрокаМаркер);
КонецФункции

Функция РазложитьСтрокуВМассивПодстрок(пИсходнаяСтрока, пРазделитель = ",") Экспорт
	МассивПодстрок = Новый Массив;
	
	Строка = СтрЗаменить(пИсходнаяСтрока, пРазделитель, Символы.ПС);
	Для сч = 1 По СтрЧислоСтрок(Строка) Цикл МассивПодстрок.Добавить(СтрПолучитьСтроку(Строка, сч)); КонецЦикла;
	
	Возврат МассивПодстрок;
КонецФункции

Функция РазложитьСтрокуВМассивПодстрок_быстрый(пИсходнаяСтрока, пРазделитель = ",") Экспорт
	Возврат ЗначениеИзСтрокиВнутр("{""#"",51e7a0d2-530b-11d4-b98a-008048da3034,{0,{""S"",""" + СтрЗаменить(СтрЗаменить(пИсходнаяСтрока, """", """"""), пРазделитель, """},{""S"",""") + """}}}");
	// http://infostart.ru/public/71130/#Pro_bystrye_massivy
КонецФункции

// Разбивает строку на несколько строк по разделителю. Разделитель может иметь любую длину.
//
// Параметры:
//  Строка                 - Строка - текст с разделителями;
//  Разделитель            - Строка - разделитель строк текста, минимум 1 символ;
//  ПропускатьПустыеСтроки - Булево - признак необходимости включения в результат пустых строк.
//    Если параметр не задан, то функция работает в режиме совместимости со своей предыдущей версией:
//     - для разделителя-пробела пустые строки не включаются в результат, для остальных разделителей пустые строки
//       включаются в результат.
//     - если параметр Строка не содержит значащих символов или не содержит ни одного символа (пустая строка), то в
//       случае разделителя-пробела результатом функции будет массив, содержащий одно значение "" (пустая строка), а
//       при других разделителях результатом функции будет пустой массив.
//  СокращатьНепечатаемыеСимволы - Булево - сокращать непечатаемые символы по краям каждой из найденных подстрок.
//
// Возвращаемое значение:
//  Массив - массив строк.
//
// Примеры:
//  РазложитьСтрокуВМассивПодстрок(",один,,два,", ",") - возвратит массив из 5 элементов, три из которых  - пустые
//  строки;
//  РазложитьСтрокуВМассивПодстрок(",один,,два,", ",", Истина) - возвратит массив из двух элементов;
//  РазложитьСтрокуВМассивПодстрок(" один   два  ", " ") - возвратит массив из двух элементов;
//  РазложитьСтрокуВМассивПодстрок("") - возвратит пустой массив;
//  РазложитьСтрокуВМассивПодстрок("",,Ложь) - возвратит массив с одним элементом "" (пустой строкой);
//  РазложитьСтрокуВМассивПодстрок("", " ") - возвратит массив с одним элементом "" (пустой строкой);
//
// Примечание:
//  В случаях, когда разделителем является строка из одного символа, и не используется параметр СокращатьНепечатаемыеСимволы,
//  рекомендуется использовать функцию платформы СтрРазделить.
// взято из БСП 23. СтроковыеФункцииКлиентСервер
// 
Функция РазложитьСтрокуВМассивПодстрок_БСП(Знач Строка, Знач Разделитель = ",", Знач ПропускатьПустыеСтроки = Неопределено, СокращатьНепечатаемыеСимволы = Ложь) Экспорт
	
	Результат = Новый Массив;
	
	// Для обеспечения обратной совместимости.
	Если ПропускатьПустыеСтроки = Неопределено Тогда
		ПропускатьПустыеСтроки = ?(Разделитель = " ", Истина, Ложь);
		Если ПустаяСтрока(Строка) Тогда 
			Если Разделитель = " " Тогда
				Результат.Добавить("");
			КонецЕсли;
			Возврат Результат;
		КонецЕсли;
	КонецЕсли;
	//
	
	Позиция = Найти(Строка, Разделитель);
	Пока Позиция > 0 Цикл
		Подстрока = Лев(Строка, Позиция - 1);
		Если Не ПропускатьПустыеСтроки Или Не ПустаяСтрока(Подстрока) Тогда
			Если СокращатьНепечатаемыеСимволы Тогда
				Результат.Добавить(СокрЛП(Подстрока));
			Иначе
				Результат.Добавить(Подстрока);
			КонецЕсли;
		КонецЕсли;
		Строка = Сред(Строка, Позиция + СтрДлина(Разделитель));
		Позиция = Найти(Строка, Разделитель);
	КонецЦикла;
	
	Если Не ПропускатьПустыеСтроки Или Не ПустаяСтрока(Строка) Тогда
		Если СокращатьНепечатаемыеСимволы Тогда
			Результат.Добавить(СокрЛП(Строка));
		Иначе
			Результат.Добавить(Строка);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции 

Функция СтрОбрезатьСправа(Знач Строка,ЧислоСимволов) Экспорт
    
    Возврат Лев(Строка,СтрДлина(Строка)-ЧислоСимволов);    

КонецФункции

Функция СтрОбрезатьСлева(Знач Строка,ЧислоСимволов) Экспорт

    Возврат Прав(Строка,СтрДлина(Строка)-ЧислоСимволов);    

КонецФункции

Процедура СтрУбратьПодрядидущиеСимволы(Строка,СтрокаЗамены) Экспорт
    
    Для Индекс = 1 По СтрДлина(СтрокаЗамены) Цикл
        СимволЗамены = Сред(СтрокаЗамены,Индекс,1);
        
        Пока Истина Цикл
            ПодстрокаЗамены = СимволЗамены+СимволЗамены;
            
            Если Найти(Строка,ПодстрокаЗамены) > 0 Тогда
                Строка = СтрЗаменить(Строка,ПодстрокаЗамены,СимволЗамены);
            Иначе    
                Прервать;
            КонецЕсли; 
            
        КонецЦикла;
        
    КонецЦикла; 

КонецПроцедуры

Функция ПолучитьЧислоИзСтроки(Знач Строка,ВернутьЧисло = Ложь) Экспорт
    
    Ошибка = ПустаяСтрока(Строка);
    
    Если Ошибка Тогда
        Возврат ?(ВернутьЧисло,0,Неопределено);
    КонецЕсли; 
    
    ЕстьРазделитель = Ложь;
    Строка = СтрЗаменить(СокрЛП(Строка)," ","");
    Отрицательное = Лев(Строка,1) = "-";
    ЦифровойРяд = "0123456789";
    
    Если Отрицательное Тогда
        Строка = СтрОбрезатьСлева(Строка,1);
    КонецЕсли; 
    
    Для Индекс = 1 По СтрДлина(Строка) Цикл
        Знак = Сред(Строка,Индекс,1);
        
        Если Знак = "," или Знак = "." Тогда
            
            Если ЕстьРазделитель Тогда
                Ошибка = Истина;
                Прервать;
            Иначе
                ЕстьРазделитель = Истина;    
            КонецЕсли;
            
        ИначеЕсли Найти(ЦифровойРяд,Знак) = 0 Тогда
            Ошибка = Истина;
            Прервать;
        КонецЕсли;
        
    КонецЦикла;
    
    Если Отрицательное Тогда
        Строка = "-"+Строка;    
    КонецЕсли; 
    
    Возврат ?(Ошибка,?(ВернутьЧисло,0,Неопределено),Число(Строка));
    
КонецФункции

Функция ПовторитьСимвол(Символ, КоличествоПовторов)
	Возврат СтрЗаменить(Лев(Формат(1, "ЧС="+Формат(КоличествоПовторов,"ЧГ=0")+"; ЧРД=0"), КоличествоПовторов), "0", Символ);
КонецФункции

Функция СтрокаМассив(Знач Значение,Разделитель)
	// взято из шаблона yasen.st
	Если ТипЗнч(Значение)=Тип("Строка") Тогда
		МнСтр=СтрЗаменить(Значение,Разделитель,Символы.ПС);
		Массив=Новый Массив;
		Для н=1 По СтрЧислоСтрок(МнСтр) Цикл
			Массив.Добавить(СтрПолучитьСтроку(МнСтр,н));
		КонецЦикла;
		Возврат Массив;
	ИначеЕсли ТипЗнч(Значение)=Тип("Массив") Тогда
		Строка="";
		Для Каждого Элемент Из Значение Цикл
			Строка=Строка+?(Строка<>"",Разделитель,"")+Элемент;
		КонецЦикла;
		Возврат Строка;
	Иначе
		Возврат Неопределено;	
	КонецЕсли;
КонецФункции

Функция СтрокаИзПробелов(пКоличествоПробелов)
	Возврат СтрЗаменить(Лев(Формат(1, "ЧС="+Формат(пКоличествоПробелов,"ЧГ=0")+"; ЧРД=0"), пКоличествоПробелов), "0", " ");
КонецФункции

Функция ПолучитьСтрокуЗаданнойДлиныИзЗаданногоСимвола(ДлинаСтроки, Символ)
	Возврат СтрЗаменить(Лев(Формат(1, "ЧС="+Формат(ДлинаСтроки,"ЧГ=0")+"; ЧРД=0"), ДлинаСтроки), "0", Символ);
КонецФункции

Функция ИзвлечьЦифрыИзСтроки(СтрокаИзБуквИЦифр)
	// взято с форума: http://forum.infostart.ru/forum26/topic114710/message1613154/#message1613154
	
    RegExp = Новый COMОбъект("VBScript.RegExp");
    RegExp.IgnoreCase = Истина; //Игнорировать регистр 
    RegExp.Global = Истина; //Поиск всех вхождений шаблона 
    RegExp.MultiLine = Истина; //Многострочный режим 
        
    RegExp.Pattern = "[^0-9]"; // отбор только чисел
    Возврат RegExp.Replace(СтрокаИзБуквИЦифр, "");
	
КонецФункции
